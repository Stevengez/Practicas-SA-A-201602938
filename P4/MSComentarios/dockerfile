# syntax=docker/dockerfile:1
# Etapa 1: Construcci칩n del binario
FROM golang:1.24.1-alpine

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copiar los archivos go.mod y go.sum
COPY go.mod go.sum ./

# Descargar las dependencias del proyecto
RUN go mod tidy

# Copiar el c칩digo fuente al contenedor
COPY . .

RUN go get github.com/stretchr/testify
RUN go test
# Construir el binario
RUN go build -o main .

# Etapa 2: Crear la imagen final
FROM alpine:latest

# Instalar dependencias necesarias para ejecutar el binario
RUN apk --no-cache add ca-certificates

# Establecer el directorio de trabajo
WORKDIR /root/

# Copiar el binario desde la etapa de construcci칩n
COPY --from=0 /app/main .

# Exponer el puerto que usar치 la API
EXPOSE 3000
ENV DB_HOST=localhost
ENV DB_USER=postgres
ENV DB_PASS=postgres123
ENV DB_DBNAME=p4
ENV DB_PORT=5432

# Comando para ejecutar el binario cuando se inicie el contenedor
CMD ["./main"]